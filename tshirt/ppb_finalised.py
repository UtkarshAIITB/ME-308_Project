# -*- coding: utf-8 -*-
"""PPB_finalised.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xYsF7kbAn-aJE_L6FEssNZQv4C26B3jx
"""

import numpy as np

demand = [417, 308, 313, 644, 445, 427, 460, 305, 783, 295, 415, 538]
setup_cost = [1300, 1300, 1300, 1500, 1300, 1300, 1300, 1300, 800, 1200, 1300, 1300]
# setup_cost = 1300
holding_cost = 10 #per month per tshirt


def output_func(demand, setup_cost, holding_cost, q, d):
  holding_costpw = holding_cost/4  #per week

  demand_pw = []
  for item in demand:
    value = int(item/4)
    demand_pw.append(value)
    demand_pw.append(value)
    demand_pw.append(value)
    demand_pw.append(value)

  setup_costpw = []
  for cost in setup_cost:
    setup_costpw.append(cost)
    setup_costpw.append(cost)
    setup_costpw.append(cost)
    setup_costpw.append(cost)

  setup_costpw

  demand_pw

  length = len(demand_pw)
  j=0
  i=0
  k=0
  curr_sum =0
  lots = []
  curr_lot=[]
  disect=[]
  prev_diff = 1e6
  setup_cost_f = setup_costpw[0]
  while(j<length):
    holding_cost = 10 #per month
    holding_costpw = holding_cost/4  #per week
    curr_sum+=demand_pw[j]*i
    if sum(curr_lot)>q[0]:
        holding_costpw=holding_costpw*(1-d[0])                     #30% Discount
    if sum(curr_lot)>q[1]:
        holding_costpw=holding_costpw*(1-d[1])                     #40% Discount
    if sum(curr_lot)>q[2]:
        holding_costpw=holding_costpw*(1-d[2])                     #50% Discount
    EPP = setup_cost_f/holding_costpw
    # print (EPP)
    diff = abs(EPP-curr_sum)
    i+=1
    j+=1
    if(diff > prev_diff):
      disect.append(i-1)
      lots.append(curr_lot)
      curr_lot=[]
      j-=1
      i=0
      curr_sum=0
      prev_diff = 1e6
      setup_cost_f = setup_costpw[j]
    else:
      curr_lot.append(demand_pw[j-1])
      prev_diff = diff
    
    

  print("Lots:",lots)
  disect.append(48-sum(disect))
  print("disect:",disect)

  order = []
  for lsit in lots:
    order.append(sum(lsit))
  
  counter = 0
  total_cost = 0
  for lot in lots:
    cost = 0
    if sum(lot)>q[0]:
      holding_costpw=holding_costpw*(1-d[0])                     #30% Discount
    if sum(lot)>q[1]:
      holding_costpw=holding_costpw*(1-d[1])                     #40% Discount
    if sum(lot)>q[2]:
      holding_costpw=holding_costpw*(1-d[2]) 
    total_cost += setup_costpw[counter]
    for item in lot:
      counter+=1
      total_cost += (cost*holding_costpw*item)
      cost+=1
  return order ,lots, disect, total_cost













